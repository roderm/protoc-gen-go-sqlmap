// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: test/proto/twoway/twoway.proto

package twoway

import (
	_ "github.com/roderm/protoc-gen-go-sqlmap/sqlgen"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId int64  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty" db:"id"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" db:"name"`
	Number   int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty" db:"number"`
	Team     *Team  `protobuf:"bytes,10,opt,name=team,proto3" json:"team,omitempty" db:"team"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_twoway_twoway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_twoway_twoway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_test_proto_twoway_twoway_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetPlayerId() int64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Player) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamId  int64     `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty" db:"id"`
	League  string    `protobuf:"bytes,2,opt,name=league,proto3" json:"league,omitempty" db:"league"`
	Players []*Player `protobuf:"bytes,10,rep,name=players,proto3" json:"players,omitempty" db:"id"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_twoway_twoway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_twoway_twoway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_test_proto_twoway_twoway_proto_rawDescGZIP(), []int{1}
}

func (x *Team) GetTeamId() int64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *Team) GetLeague() string {
	if x != nil {
		return x.League
	}
	return ""
}

func (x *Team) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId    int64  `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty" db:"id"`
	Date       string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty" db:"date"`
	Home       *Team  `protobuf:"bytes,10,opt,name=home,proto3" json:"home,omitempty" db:"home"`
	Guest      *Team  `protobuf:"bytes,11,opt,name=guest,proto3" json:"guest,omitempty" db:"guest"`
	HomeScore  int32  `protobuf:"varint,20,opt,name=home_score,json=homeScore,proto3" json:"home_score,omitempty" db:"home_score"`
	GuestScore int32  `protobuf:"varint,21,opt,name=guest_score,json=guestScore,proto3" json:"guest_score,omitempty" db:"guest_score"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_twoway_twoway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_twoway_twoway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_test_proto_twoway_twoway_proto_rawDescGZIP(), []int{2}
}

func (x *Match) GetMatchId() int64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *Match) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Match) GetHome() *Team {
	if x != nil {
		return x.Home
	}
	return nil
}

func (x *Match) GetGuest() *Team {
	if x != nil {
		return x.Guest
	}
	return nil
}

func (x *Match) GetHomeScore() int32 {
	if x != nil {
		return x.HomeScore
	}
	return 0
}

func (x *Match) GetGuestScore() int32 {
	if x != nil {
		return x.GuestScore
	}
	return 0
}

var File_test_proto_twoway_twoway_proto protoreflect.FileDescriptor

var file_test_proto_twoway_twoway_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x77, 0x6f,
	0x77, 0x61, 0x79, 0x2f, 0x74, 0x77, 0x6f, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x13, 0x73, 0x71, 0x6c, 0x67, 0x65, 0x6e, 0x2f, 0x73,
	0x71, 0x6c, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x06,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xf2, 0xd6, 0x86, 0x03, 0x06,
	0x0a, 0x02, 0x69, 0x64, 0x10, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0xf2, 0xd6, 0x86, 0x03, 0x06, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0d, 0xf2, 0xd6, 0x86, 0x03, 0x08, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x42, 0x18, 0xf2, 0xd6, 0x86, 0x03, 0x13, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x1a,
	0x0b, 0x74, 0x62, 0x6c, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x69, 0x64, 0x52, 0x04, 0x74, 0x65,
	0x61, 0x6d, 0x3a, 0x13, 0xa2, 0xd6, 0x86, 0x03, 0x0e, 0x0a, 0x0a, 0x74, 0x62, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x24, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0b, 0xf2, 0xd6, 0x86, 0x03, 0x06, 0x0a, 0x02, 0x69, 0x64, 0x10, 0x01, 0x52, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xf2, 0xd6, 0x86, 0x03, 0x08, 0x0a, 0x06, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x40, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x18, 0xf2, 0xd6,
	0x86, 0x03, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x1a, 0x0d, 0x74, 0x62, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x3a,
	0x11, 0xa2, 0xd6, 0x86, 0x03, 0x0c, 0x0a, 0x08, 0x74, 0x62, 0x6c, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x10, 0x01, 0x22, 0xc2, 0x02, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x08,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b,
	0xf2, 0xd6, 0x86, 0x03, 0x06, 0x0a, 0x02, 0x69, 0x64, 0x10, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xf2, 0xd6, 0x86, 0x03, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x42,
	0x18, 0xf2, 0xd6, 0x86, 0x03, 0x13, 0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x1a, 0x0b, 0x74, 0x62,
	0x6c, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x69, 0x64, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x19, 0xf2, 0xd6, 0x86, 0x03,
	0x14, 0x0a, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x74, 0x62, 0x6c, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x2e, 0x69, 0x64, 0x52, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0a,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x11, 0xf2, 0xd6, 0x86, 0x03, 0x0c, 0x0a, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x52, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x33,
	0x0a, 0x0b, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x12, 0xf2, 0xd6, 0x86, 0x03, 0x0d, 0x0a, 0x0b, 0x67, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x3a, 0x12, 0xa2, 0xd6, 0x86, 0x03, 0x0d, 0x0a, 0x09, 0x74, 0x62, 0x6c, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x10, 0x01, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x64, 0x65, 0x72, 0x6d, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x71, 0x6c, 0x6d, 0x61,
	0x70, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x74, 0x77, 0x6f, 0x77, 0x61, 0x79, 0x2f, 0x74, 0x77,
	0x6f, 0x77, 0x61, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_proto_twoway_twoway_proto_rawDescOnce sync.Once
	file_test_proto_twoway_twoway_proto_rawDescData = file_test_proto_twoway_twoway_proto_rawDesc
)

func file_test_proto_twoway_twoway_proto_rawDescGZIP() []byte {
	file_test_proto_twoway_twoway_proto_rawDescOnce.Do(func() {
		file_test_proto_twoway_twoway_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_proto_twoway_twoway_proto_rawDescData)
	})
	return file_test_proto_twoway_twoway_proto_rawDescData
}

var file_test_proto_twoway_twoway_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_test_proto_twoway_twoway_proto_goTypes = []interface{}{
	(*Player)(nil), // 0: read.Player
	(*Team)(nil),   // 1: read.Team
	(*Match)(nil),  // 2: read.Match
}
var file_test_proto_twoway_twoway_proto_depIdxs = []int32{
	1, // 0: read.Player.team:type_name -> read.Team
	0, // 1: read.Team.players:type_name -> read.Player
	1, // 2: read.Match.home:type_name -> read.Team
	1, // 3: read.Match.guest:type_name -> read.Team
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_test_proto_twoway_twoway_proto_init() }
func file_test_proto_twoway_twoway_proto_init() {
	if File_test_proto_twoway_twoway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_proto_twoway_twoway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_twoway_twoway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_twoway_twoway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_proto_twoway_twoway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_twoway_twoway_proto_goTypes,
		DependencyIndexes: file_test_proto_twoway_twoway_proto_depIdxs,
		MessageInfos:      file_test_proto_twoway_twoway_proto_msgTypes,
	}.Build()
	File_test_proto_twoway_twoway_proto = out.File
	file_test_proto_twoway_twoway_proto_rawDesc = nil
	file_test_proto_twoway_twoway_proto_goTypes = nil
	file_test_proto_twoway_twoway_proto_depIdxs = nil
}
